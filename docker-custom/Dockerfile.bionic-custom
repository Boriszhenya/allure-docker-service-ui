ARG ARCH=amd64
ARG BUILD_DATE
ARG BUILD_VERSION=7.0.0-custom
ARG BUILD_REF=na
ARG UID=1000
ARG GID=1000

FROM node:12.18.3-buster-slim AS builder
ENV ROOT=/code
WORKDIR $ROOT
COPY ui $ROOT
RUN npm install && \
    npm run build

FROM node:12.18.3-buster-slim
LABEL org.label-schema.build-date=${BUILD_DATE} \
    org.label-schema.docker.dockerfile="docker-custom/Dockerfile.bionic-custom" \
    org.label-schema.license="MIT" \
    org.label-schema.name="Allure Docker Service UI" \
    org.label-schema.version=${BUILD_VERSION} \
    org.label-schema.description="UI Layer for Allure Docker Service container" \
    org.label-schema.vcs-ref=${BUILD_REF} \
    org.label-schema.vcs-type="Git" \
    org.label-schema.vcs-url="https://github.com/fescobar/allure-docker-service-ui" \
    org.label-schema.arch=${ARCH} \
    authors="Frank Escobar <fescobar.systems@gmail.com>"

ENV ROOT=/app

WORKDIR $ROOT
COPY --from=builder /code/build $ROOT/ui
COPY server $ROOT/ui
COPY scripts $ROOT
COPY ui/generate_env_file.sh $ROOT

RUN chmod +x $ROOT/*.sh && \
    npm install --prefix $ROOT/ui

ENV PORT=5252
EXPOSE $PORT

HEALTHCHECK --interval=10s --timeout=60s --retries=3 \
      CMD curl -f http://localhost:$PORT || exit 1

CMD $ROOT/run.sh
